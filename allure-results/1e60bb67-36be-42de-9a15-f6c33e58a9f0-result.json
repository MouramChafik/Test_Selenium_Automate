{"name": "test_add_category_form", "status": "failed", "statusDetails": {"message": "AssertionError: Success toast should be displayed\nassert 'Category saved successfully!' in ''\n +  where '' = <selenium.webdriver.remote.webelement.WebElement (session=\"01c7f04959ac3fc8ed5b7f12031cd9eb\", element=\"f.189B53EE1511482B9B9836BC48443E71.d.4BD04A76D51546743338E8A42ACA2C50.e.103\")>.text", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"01c7f04959ac3fc8ed5b7f12031cd9eb\")>\n\n    def test_add_category_form(driver):\n        \"\"\"Test filling and submitting the category form\"\"\"\n        # Login first\n        login(driver)\n        print(\"\\nCurrent URL:\", driver.current_url)\n    \n        # Navigate to new category page\n        admin_nav = WebDriverWait(driver, 10).until(\n            EC.presence_of_element_located((By.CSS_SELECTOR, ADMIN_NAVIGATION))\n        )\n        categories_link = admin_nav.find_element(By.CSS_SELECTOR, CATEGORIES_LINK)\n        categories_link.click()\n    \n        WebDriverWait(driver, 10).until(EC.url_to_be(CATEGORIES_URL))\n    \n        new_category_btn = WebDriverWait(driver, 10).until(\n            EC.presence_of_element_located((By.CSS_SELECTOR, NEW_CATEGORY_BUTTON))\n        )\n        new_category_btn.click()\n    \n        WebDriverWait(driver, 10).until(EC.url_to_be(NEW_CATEGORY_URL))\n    \n        print(\"\\nFilling category form...\")\n    \n        # Fill name\n        print(\"Filling name\")\n        name_input = WebDriverWait(driver, 10).until(\n            EC.presence_of_element_located((By.CSS_SELECTOR, CATEGORY_NAME_INPUT))\n        )\n        name_input.clear()\n        time.sleep(WAIT_TIME)\n        name_input.send_keys(\"Test Category\")\n    \n        # Select parent category\n        print(\"Selecting parent category\")\n        select_btn = driver.find_element(By.CSS_SELECTOR, CATEGORY_SELECT_BUTTON)\n        select_btn.click()\n        time.sleep(WAIT_TIME)\n    \n        # Wait for tree and select first category\n        category_tree = WebDriverWait(driver, 10).until(\n            EC.presence_of_element_located((By.CSS_SELECTOR, CATEGORY_TREE))\n        )\n        first_category = category_tree.find_element(\n            By.CSS_SELECTOR, \"li a:nth-child(2)\"\n        )  # Select the category name link\n        first_category.click()\n        time.sleep(WAIT_TIME)\n    \n        # Fill URL Key\n        print(\"Filling URL key\")\n        url_key = driver.find_element(By.CSS_SELECTOR, CATEGORY_URL_KEY)\n        url_key.clear()\n        time.sleep(WAIT_TIME)\n        unique_url = f\"test-category-{int(time.time())}\"\n        url_key.send_keys(unique_url)\n    \n        # Fill Meta Title\n        print(\"Filling meta title\")\n        meta_title = driver.find_element(By.CSS_SELECTOR, CATEGORY_META_TITLE)\n        meta_title.clear()\n        time.sleep(WAIT_TIME)\n        meta_title.send_keys(\"Test Category Meta Title\")\n    \n        # Fill Meta Keywords\n        print(\"Filling meta keywords\")\n        meta_keywords = driver.find_element(By.CSS_SELECTOR, CATEGORY_META_KEYWORDS)\n        meta_keywords.clear()\n        time.sleep(WAIT_TIME)\n        meta_keywords.send_keys(\"test, category, keywords\")\n    \n        # Fill Meta Description\n        print(\"Filling meta description\")\n        meta_description = driver.find_element(By.CSS_SELECTOR, CATEGORY_META_DESCRIPTION)\n        meta_description.clear()\n        time.sleep(WAIT_TIME)\n        meta_description.send_keys(\n            \"This is a test category description for testing purposes.\"\n        )\n    \n        # Add Image\n        print(\"Adding image\")\n        file_input = driver.find_element(\n            By.CSS_SELECTOR, \"input[type='file']#categoryImageUpload\"\n        )\n        image_path = os.path.abspath(\"config/test_image.jpg\")\n        file_input.send_keys(image_path)\n        time.sleep(WAIT_TIME * 2)  # Wait longer for image upload\n    \n        # Verify radio buttons are selected\n        print(\"Verifying radio buttons\")\n        status = driver.find_element(By.CSS_SELECTOR, CATEGORY_STATUS_ENABLED)\n        assert status.is_selected(), \"Status should be enabled\"\n    \n        include_nav = driver.find_element(By.CSS_SELECTOR, CATEGORY_INCLUDE_IN_NAV_RADIO)\n        assert include_nav.is_selected(), \"Include in nav should be yes\"\n    \n        show_products = driver.find_element(By.CSS_SELECTOR, CATEGORY_SHOW_PRODUCTS)\n        assert show_products.is_selected(), \"Show products should be yes\"\n    \n        # Save the category\n        print(\"Saving category\")\n        save_btn = driver.find_element(By.CSS_SELECTOR, CATEGORY_SAVE_BUTTON)\n        save_btn.click()\n    \n        # Wait for success toast\n        success_toast = WebDriverWait(driver, 10).until(\n            EC.presence_of_element_located(\n                (By.CSS_SELECTOR, \"div.Toastify__toast--success\")\n            )\n        )\n>       assert (\n            \"Category saved successfully!\" in success_toast.text\n        ), \"Success toast should be displayed\"\nE       AssertionError: Success toast should be displayed\nE       assert 'Category saved successfully!' in ''\nE        +  where '' = <selenium.webdriver.remote.webelement.WebElement (session=\"01c7f04959ac3fc8ed5b7f12031cd9eb\", element=\"f.189B53EE1511482B9B9836BC48443E71.d.4BD04A76D51546743338E8A42ACA2C50.e.103\")>.text\n\ntests/test_test_add_category_form.py:185: AssertionError"}, "description": "Test filling and submitting the category form", "attachments": [{"name": "stdout", "source": "3071d222-fb00-45af-b393-c9dd9dc7993f-attachment.txt", "type": "text/plain"}], "start": 1749847429280, "stop": 1749847460455, "uuid": "5ac772b6-97a9-48d7-90ed-60a564214320", "historyId": "f41434d77db27fcaefd19ee752e4de91", "testCaseId": "f41434d77db27fcaefd19ee752e4de91", "fullName": "tests.test_test_add_category_form#test_add_category_form", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_test_add_category_form"}, {"name": "host", "value": "MBP-de-chafik.lan"}, {"name": "thread", "value": "43941-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_test_add_category_form"}]}